# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Android CD

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: Release type
        options:
          - release
          - prerelease
          - artifact
      tag:
        description: Version
        default: 'v0.0.0'
        required: true

env:
  RELEASE_PATH: /home/runner/work/refuel-tracker/refuel-tracker/dist/capacitor/android/apk/release
  RELEASE_PATH_SIGNED: ${{ env.RELEASE_PATH }}/signed

jobs:
  create-release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install yarn
        run: npm install --global yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install app dependecies
        run: yarn

      - name: Run tests
        run: yarn test

      - name: Build apk
        run: yarn appbuild

      - name: Sign apk
        uses: Tlaster/android-sign@v1.2.2
        with:
          releaseDirectory: ${{ env.RELEASE_PATH }}
          signingKeyBase64: ${{ secrets.MY_KEY }}
          output: ${{ env.RELEASE_PATH_SIGNED }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: '30.0.2'

      - name: Rename apk
        run: cd ${{ env.RELEASE_PATH_SIGNED }} &&
          mv *.apk $(
          if [ $(echo ${{ contains(fromJson('["release", "prerelease"]'), inputs.release-type) }}) ]; then
          echo refuel-tracker-${{ inputs.tag }}.apk;
          elif [ ${{ inputs.release-type == 'artifact' }} ]; then
          echo refuel-tracker-artifact.apk;
          else echo refuel-tracker.apk;
          fi)

      - name: Create release
        if: ${{ contains(fromJson('["release", "prerelease"]'), inputs.release-type) }}
        run: gh release create ${{ inputs.tag }} --generate-notes $(if [ ${{ inputs.release-type == 'prerelease' }} ]; then echo --prerelease; else echo ""; fi)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Append apk to release
        if: ${{ contains(fromJson('["release", "prerelease"]'), inputs.release-type) }}
        run: gh release upload ${{ inputs.tag }} ${{ env.RELEASE_PATH_SIGNED }}/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        if: ${{ inputs.release-type == 'artifact' }}
        uses: actions/upload-artifact@v3
        with:
          name: refuel-tracker-artifact
          path: ${{ env.RELEASE_PATH_SIGNED }}
