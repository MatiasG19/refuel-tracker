var p=Object.defineProperty;var o=(i,e,a)=>e in i?p(i,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):i[e]=a;var t=(i,e,a)=>(o(i,typeof e!="symbol"?e+"":e,a),a);class D{constructor(){t(this,"uid");t(this,"title");t(this,"value");t(this,"unit");t(this,"sequence");t(this,"periodId");t(this,"perdiod");t(this,"visible")}}const r=class{constructor(e){this.vehicle=e}static register(e,a){r.graphDataClasses.set(e,a)}getAll(e){const a=[];for(const s of r.graphDataClasses.entries()){const c=s[0],u=s[1];if(!c)continue;const l=e.filter(h=>h.uid===c);!l||a.push(this.createGraphData(u,l[0]))}return a}get(e,a){const s=r.graphDataClasses.get(e);return s?this.createGraphData(s,a):null}createGraphData(e,a){const s=new e(this.vehicle);return s.uid=a.uid,s.sequence=a.sequence,s.visible=a.visible,s}};let n=r;t(n,"graphDataClasses",new Map);export{D as G,n as a};
