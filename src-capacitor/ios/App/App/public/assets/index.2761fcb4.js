import{u as R,r as q,Q as I,aJ as P,aI as E,o as B,h as A,v as Q,g as O,aO as V,am as F,z as k,aR as $,aS as j,d as D,a1 as M,a2 as N,a3 as T,aT as U,aU as w}from"./index.af9e0f6e.js";var K=R({name:"QForm",props:{autofocus:Boolean,noErrorFocus:Boolean,noResetFocus:Boolean,greedy:Boolean,onSubmit:Function},emits:["reset","validationSuccess","validationError"],setup(t,{slots:c,emit:s}){const m=O(),i=q(null);let l=0;const u=[];function v(e){const r=typeof e=="boolean"?e:t.noErrorFocus!==!0,f=++l,h=(o,n)=>{s("validation"+(o===!0?"Success":"Error"),n)},g=o=>{const n=o.validate();return typeof n.then=="function"?n.then(a=>({valid:a,comp:o}),a=>({valid:!1,comp:o,err:a})):Promise.resolve({valid:n,comp:o})};return(t.greedy===!0?Promise.all(u.map(g)).then(o=>o.filter(n=>n.valid!==!0)):u.reduce((o,n)=>o.then(()=>g(n).then(a=>{if(a.valid===!1)return Promise.reject(a)})),Promise.resolve()).catch(o=>[o])).then(o=>{if(o===void 0||o.length===0)return f===l&&h(!0),!0;if(f===l){const{comp:n,err:a}=o[0];if(a!==void 0&&console.error(a),h(!1,n),r===!0){const S=o.find(({comp:C})=>typeof C.focus=="function"&&V(C.$)===!1);S!==void 0&&S.comp.focus()}}return!1})}function y(){l++,u.forEach(e=>{typeof e.resetValidation=="function"&&e.resetValidation()})}function b(e){e!==void 0&&F(e);const r=l+1;v().then(f=>{r===l&&f===!0&&(t.onSubmit!==void 0?s("submit",e):e!==void 0&&e.target!==void 0&&typeof e.target.submit=="function"&&e.target.submit())})}function p(e){e!==void 0&&F(e),s("reset"),k(()=>{y(),t.autofocus===!0&&t.noResetFocus!==!0&&d()})}function d(){$(()=>{if(i.value===null)return;const e=i.value.querySelector("[autofocus][tabindex], [data-autofocus][tabindex]")||i.value.querySelector("[autofocus] [tabindex], [data-autofocus] [tabindex]")||i.value.querySelector("[autofocus], [data-autofocus]")||Array.prototype.find.call(i.value.querySelectorAll("[tabindex]"),r=>r.tabIndex!==-1);e!=null&&e.focus({preventScroll:!0})})}I(j,{bindComponent(e){u.push(e)},unbindComponent(e){const r=u.indexOf(e);r!==-1&&u.splice(r,1)}});let x=!1;return P(()=>{x=!0}),E(()=>{x===!0&&t.autofocus===!0&&d()}),B(()=>{t.autofocus===!0&&d()}),Object.assign(m.proxy,{validate:v,resetValidation:y,submit:b,reset:p,focus:d,getValidationComponents:()=>u}),()=>A("form",{class:"q-form",ref:i,onSubmit:b,onReset:p},Q(c.default))}});const G=D({__name:"CInput",props:{type:{type:null,default:"text"},value:{type:String,reqired:!0},label:{type:String,default:"Input"},rules:{type:null}},emits:["value"],setup(t){return(c,s)=>(M(),N(U,{outlined:"",color:"accent","model-value":t.value,onUpdate:s[0]||(s[0]=m=>c.$emit("value",m)),label:t.label,rules:t.rules,type:t.type},{default:T(()=>[w(c.$slots,"default")]),_:3},8,["model-value","label","rules","type"]))}}),H=t=>!!t||"Required field",L=t=>+t||"Numbers only",W=t=>+t>0?+t:"Positive numbers only",X=t=>t.length<=50?1:"Maximum 50 characters";export{K as Q,G as _,X as m,L as n,W as p,H as r};
