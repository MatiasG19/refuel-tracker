import{j as C,r as E,H as P,aF as q,aE as A,o as B,h as I,k as O,g as V,aO as j,af as S,p as Q,aR as k,aS as D}from"./index.dc551ac6.js";var H=C({name:"QForm",props:{autofocus:Boolean,noErrorFocus:Boolean,noResetFocus:Boolean,greedy:Boolean,onSubmit:Function},emits:["reset","validationSuccess","validationError"],setup(o,{slots:F,emit:f}){const R=V(),u=E(null);let i=0;const s=[];function d(e){const r=typeof e=="boolean"?e:o.noErrorFocus!==!0,l=++i,h=(t,n)=>{f("validation"+(t===!0?"Success":"Error"),n)},x=t=>{const n=t.validate();return typeof n.then=="function"?n.then(a=>({valid:a,comp:t}),a=>({valid:!1,comp:t,err:a})):Promise.resolve({valid:n,comp:t})};return(o.greedy===!0?Promise.all(s.map(x)).then(t=>t.filter(n=>n.valid!==!0)):s.reduce((t,n)=>t.then(()=>x(n).then(a=>{if(a.valid===!1)return Promise.reject(a)})),Promise.resolve()).catch(t=>[t])).then(t=>{if(t===void 0||t.length===0)return l===i&&h(!0),!0;if(l===i){const{comp:n,err:a}=t[0];if(a!==void 0&&console.error(a),h(!1,n),r===!0){const g=t.find(({comp:p})=>typeof p.focus=="function"&&j(p.$)===!1);g!==void 0&&g.comp.focus()}}return!1})}function m(){i++,s.forEach(e=>{typeof e.resetValidation=="function"&&e.resetValidation()})}function v(e){e!==void 0&&S(e);const r=i+1;d().then(l=>{r===i&&l===!0&&(o.onSubmit!==void 0?f("submit",e):e!==void 0&&e.target!==void 0&&typeof e.target.submit=="function"&&e.target.submit())})}function b(e){e!==void 0&&S(e),f("reset"),Q(()=>{m(),o.autofocus===!0&&o.noResetFocus!==!0&&c()})}function c(){k(()=>{if(u.value===null)return;const e=u.value.querySelector("[autofocus][tabindex], [data-autofocus][tabindex]")||u.value.querySelector("[autofocus] [tabindex], [data-autofocus] [tabindex]")||u.value.querySelector("[autofocus], [data-autofocus]")||Array.prototype.find.call(u.value.querySelectorAll("[tabindex]"),r=>r.tabIndex>-1);e!=null&&e.focus({preventScroll:!0})})}P(D,{bindComponent(e){s.push(e)},unbindComponent(e){const r=s.indexOf(e);r>-1&&s.splice(r,1)}});let y=!1;return q(()=>{y=!0}),A(()=>{y===!0&&o.autofocus===!0&&c()}),B(()=>{o.autofocus===!0&&c()}),Object.assign(R.proxy,{validate:d,resetValidation:m,submit:v,reset:b,focus:c,getValidationComponents:()=>s}),()=>I("form",{class:"q-form",ref:u,onSubmit:v,onReset:b},O(F.default))}});const K=o=>!!o||"Required field",T=o=>+o||"Numbers only",$=o=>+o>0?+o:"Positive numbers only",w=o=>o.length<=50?1:"Maximum 50 characters";export{H as Q,w as m,T as n,$ as p,K as r};
